---
alias: "[HA] Startup"
id: ha_startup
trigger:
  - platform: homeassistant
    event: start
action:
  - service: system_log.write
    data:
      logger: "{{ this.entity_id }}"
      level: critical
      message: "**** HOME ASSISTANT START ****"

  - service: persistent_notification.create
    data:
      title: "Automation Startup"
      message: "Waiting for startup to complete."
      notification_id: hass_restart

  - service: counter.reset
    entity_id: counter.automation_trigger_counter

  - service: input_boolean.turn_off
    entity_id: input_boolean.ha_startup_pending

  - service: persistent_notification.create
    data:
      title: &start_title "Home Assistant Started"
      message: &start_message "HA started at {{ now().strftime('%-I:%M %p') }}."
      notification_id: hass_restart

  - if:
      - condition: state
        entity_id: input_boolean.alerts_ha
        state: "on"
    then:
      - service: notify.tbsmarthome
        data_template:
          message: *start_title
          target: "#tbsmarthome"
          data:
            blocks:
              - type: section
                text:
                  type: mrkdwn
                  text: *start_title
              - type: section
                text:
                  type: mrkdwn
                  text: *start_message

      - service: notify.mobile_app_tbiphone13pro
        data:
          message: *start_message
          title: *start_title
          data:
            push:
              badge: 1
              sound: none
              interruption-level: time-sensitive
            presentation_options:
              - alert
              - badge

  - service: persistent_notification.dismiss
    data:
      notification_id: hass_restart

  - service: system_log.write
    data:
      logger: "{{ this.entity_id }}"
      level: critical
      message: "**** HOME ASSISTANT STARTUP COMPLETE ****"
