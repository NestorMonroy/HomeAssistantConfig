---
alias: "[HA] Update Groups Automatically"
mode: restart
trigger:
  - platform: homeassistant
    id: startup
    event: start

  - platform: event
    event_type: call_service
    event_data:
      domain: group
      service: reload

  - platform: time_pattern
    hours: "/2"

action:
  - if: "{{ trigger.id == 'startup' }}"
    then:
      - delay: 60

  - service: group.set
    data_template:
      object_id: battery_devices
      name: "[Group] Battery Devices"
      icon: mdi:battery
      entities: >-
        {%-
          for state in states.sensor
            if is_state_attr(state.entity_id, 'device_class', 'battery') and
            (state.entity_id.endswith("_battery") or state.entity_id.endswith("_power"))
        %}
        {{ state.entity_id }}{%- if not loop.last -%}, {%- endif -%}
        {%- endfor %}

  - service: group.set
    data_template:
      object_id: media_players
      name: "[Group] Media Players"
      icon: mdi:media-network
      entities: >-
        {%- for state in states.media_player %}
        {{ state.entity_id }}{%- if not loop.last -%}, {%- endif -%}
        {%- endfor %}

  - service: group.set
    data:
      object_id: lights
      name: "[Group] Lights"
      icon: mdi:lamps
      entities: >
        {{ states.light
            |map(attribute='entity_id')|list|sort }}

  - service: group.set
    data:
      object_id: alert_controls
      name: "[Group] Alert Controls"
      icon: mdi:alert-decagram
      entities: >
        {{ states
            |selectattr('entity_id','search','input_boolean.alerts_*')
            |map(attribute='entity_id')|list|sort }}

  - service: group.set
    data:
      object_id: connectivity_monitors
      name: "[Group] Connectivity Monitors"
      icon: mdi:connection
      entities: >
        {{ states
            |selectattr('entity_id','search','binary_sensor.connected_*')
            |map(attribute='entity_id')|list|sort }}

  - service: group.set
    data:
      object_id: people
      name: "[Group] People"
      icon: mdi:account-multiple
      entities: >
        {{ states.person|map(attribute='entity_id')|list|sort }}

  - service: group.set
    data:
      object_id: waqi
      name: "[Group] WAQI"
      icon: mdi:smog
      entities: >
        {{ states
          |selectattr('entity_id','search','waqi*')
          |rejectattr('entity_id','search','alert*')
          |rejectattr('entity_id','search','group*')
          |map(attribute='entity_id')|list|sort }}

  - service: group.set
    data:
      object_id: docker_pi4srv_containers
      name: "[Group] Docker Pi4Srv Containers"
      icon: mdi:docker
      entities: >
        {{states.sensor
              |selectattr('entity_id','search','sensor.pi4srv_monitordocker_')
              |rejectattr('entity_id','search','_1cpu')
              |rejectattr('entity_id','search','_containers_')
              |rejectattr('entity_id','search','_cpu')
              |rejectattr('entity_id','search','_images')
              |rejectattr('entity_id','search','_memory')
              |rejectattr('entity_id','search','_version')
              |map(attribute='entity_id')
              |list|sort }}
  - service: group.set
    data:
      object_id: docker_pi4srv_switches
      name: "[Group] Docker Pi4Srv Switches"
      icon: mdi:docker
      entities: >
        {{states.switch
              |selectattr('entity_id','search','pi4srv_monitordocker_')
              |map(attribute='entity_id')
              |list|sort }}

  - service: group.set
    data:
      object_id: docker_tbsh1_containers
      name: "[Group] Docker tbsh1 Containers"
      icon: mdi:docker
      entities: >
        {{states.sensor
              |selectattr('entity_id','search','sensor.tbsh1_monitordocker_')
              |rejectattr('entity_id','search','_1cpu')
              |rejectattr('entity_id','search','_containers_')
              |rejectattr('entity_id','search','_cpu')
              |rejectattr('entity_id','search','_images')
              |rejectattr('entity_id','search','_memory')
              |rejectattr('entity_id','search','_version')
              |map(attribute='entity_id')
              |list|sort }}
  - service: group.set
    data:
      object_id: docker_tbsh1_switches
      name: "[Group] Docker tbsh1 Switches"
      icon: mdi:docker
      entities: >
        {{states.switch
              |selectattr('entity_id','search','tbsh1_monitordocker_')
              |map(attribute='entity_id')
              |list|sort }}

  - service: group.set
    data:
      object_id: docker_tbsh2_containers
      name: "[Group] Docker tbsh2 Containers"
      icon: mdi:docker
      entities: >
        {{states.sensor
              |selectattr('entity_id','search','sensor.tbsh2_monitordocker_')
              |rejectattr('entity_id','search','_1cpu')
              |rejectattr('entity_id','search','_containers_')
              |rejectattr('entity_id','search','_cpu')
              |rejectattr('entity_id','search','_images')
              |rejectattr('entity_id','search','_memory')
              |rejectattr('entity_id','search','_version')
              |map(attribute='entity_id')
              |list|sort }}
  - service: group.set
    data:
      object_id: docker_tbsh2_switches
      name: "[Group] Docker tbsh2 Switches"
      icon: mdi:docker
      entities: >
        {{states.switch
              |selectattr('entity_id','search','tbsh2_monitordocker_')
              |map(attribute='entity_id')
              |list|sort }}

  - service: group.set
    data:
      object_id: docker_tbsh3_containers
      name: "[Group] Docker tbsh3 Containers"
      icon: mdi:docker
      entities: >
        {{states.sensor
              |selectattr('entity_id','search','sensor.tbsh3_monitordocker_')
              |rejectattr('entity_id','search','_1cpu')
              |rejectattr('entity_id','search','_containers_')
              |rejectattr('entity_id','search','_cpu')
              |rejectattr('entity_id','search','_images')
              |rejectattr('entity_id','search','_memory')
              |rejectattr('entity_id','search','_version')
              |map(attribute='entity_id')
              |list|sort }}
  - service: group.set
    data:
      object_id: docker_tbsh3_switches
      name: "[Group] Docker tbsh3 Switches"
      icon: mdi:docker
      entities: >
        {{states.switch
              |selectattr('entity_id','search','tbsh3_monitordocker_')
              |map(attribute='entity_id')
              |list|sort }}

  - service: group.set
    data:
      object_id: docker_tbsh5_containers
      name: "[Group] Docker tbsh5 Containers"
      icon: mdi:docker
      entities: >
        {{states.sensor
              |selectattr('entity_id','search','sensor.tbsh5_monitordocker_')
              |rejectattr('entity_id','search','_1cpu')
              |rejectattr('entity_id','search','_containers_')
              |rejectattr('entity_id','search','_cpu')
              |rejectattr('entity_id','search','_images')
              |rejectattr('entity_id','search','_memory')
              |rejectattr('entity_id','search','_version')
              |map(attribute='entity_id')
              |list|sort }}
  - service: group.set
    data:
      object_id: docker_tbsh5_switches
      name: "[Group] Docker tbsh5 Switches"
      icon: mdi:docker
      entities: >
        {{states.switch
              |selectattr('entity_id','search','tbsh5_monitordocker_')
              |map(attribute='entity_id')
              |list|sort }}

  - service: group.set
    data:
      object_id: updates_homeassistant
      name: "[Updates] Home Assistant"
      icon: mdi:home-assistant
      entities: >
        {{expand(integration_entities('Supervisor'))
          |selectattr('domain', 'eq', 'update')
          |map(attribute='entity_id')
          |list|sort }}
  - service: group.set
    data:
      object_id: updates_hacs
      name: "[Updates] HA Community Store"
      icon: mdi:home-assistant
      entities: >
        {{expand(integration_entities('hacs'))
          |selectattr('domain', 'eq', 'update')
          |map(attribute='entity_id')
          |list|sort }}
  - service: group.set
    data:
      object_id: updates_docker
      name: "[Updates] Docker"
      icon: mdi:docker
      entities: >
        {{states.update
          |selectattr('entity_id', 'search', 'wud')
          |map(attribute='entity_id')
          |list|sort }}
  - service: group.set
    data:
      object_id: updates_unifi
      name: "[Updates] Unifi"
      icon: si:ubiquiti
      entities: >
        {{expand(integration_entities('unifi'))
          |selectattr('domain', 'eq', 'update')
          |map(attribute='entity_id')
          |list|sort }}
  - service: group.set
    data:
      object_id: updates_zigbee2mqtt
      name: "[Updates] Zigbee2MQTT"
      icon: mdi:zigbee
      entities: >
        {{states.update
          |selectattr('entity_id', 'search', 'z2m')
          |map(attribute='entity_id')
          |list|sort }}
  - service: group.set
    data:
      object_id: updates_other
      name: "[Updates] Other"
      icon: mdi:update
      entities: >
        {{states.update
          |rejectattr('entity_id', 'search', 'wud')
          |rejectattr('entity_id', 'search', 'z2m')
          |rejectattr('entity_id', 'in', expand(integration_entities('hacs'))|map(attribute='entity_id')|list)
          |rejectattr('entity_id', 'in', expand(integration_entities('Supervisor'))|map(attribute='entity_id')|list)
          |rejectattr('entity_id', 'in', expand(integration_entities('unifi'))|map(attribute='entity_id')|list)
          |map(attribute='entity_id')
          |list|sort }}

  - service: group.set
    data:
      object_id: qbittorrent
      name: "[Group] qbittorrent"
      icon: mdi:download-box
      entities: >
        {{ states
          |selectattr('entity_id','search','qbit_')
          |map(attribute='entity_id')
          |list|sort }}
