---
id: "influx2entity_monthlyhomestats"
alias: "InfluxDB to Entity: Monthly Home Weather Stats"
description: "InfluxDB to Entity: Monthly Home Weather Stats"
trigger:
  - platform: homeassistant
    event: start
  - platform: time_pattern
    hours: "/1"
condition: []
action:
  - service: pyscript.influxdb2_query_to_entity
    data:
      entity_id: sensor.archive_homeoutsidetemp_max_30day
      unit_of_measurement: 째C
      friendly_name: Home - Month - Max Temp
      icon: "mdi:thermometer"
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1mo)
          |> filter(fn: (r) => r["_measurement"] == "째C")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_temperature")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: max, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "max")
  - service: pyscript.influxdb2_query_to_entity
    data:
      entity_id: sensor.archive_homeoutsidetemp_min_30day
      unit_of_measurement: 째C
      friendly_name: Home - Month - Min Temp
      icon: "mdi:thermometer"
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1mo)
          |> filter(fn: (r) => r["_measurement"] == "째C")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_temperature")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: min, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "min")
  - service: pyscript.influxdb2_query_to_entity
    data:
      query: >-
        import "timezone" option location = timezone.location(name:
        "Australia/Sydney") from(bucket: "homeassistant")
          |> range(start: -1mo)
          |> filter(fn: (r) => r["_measurement"] == "mm")
          |> filter(fn: (r) => r["entity_id"] == "tempest_st_00056115_rain_today")
          |> filter(fn: (r) => r["_field"] == "value")
          |> drop(columns: ["friendly_name"])
          |> aggregateWindow(every: 1d, fn: max, createEmpty: true)
          |> fill(value: 0.0)
          |> yield(name: "max")
      entity_id: sensor.archive_homerain_30day
      unit_of_measurement: mm
      friendly_name: Home - Month - Rain
      icon: "mdi:water"
mode: single
