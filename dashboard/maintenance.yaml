---
# MAXIMALIST DASHBOARD
# Maintenance View
# Made by Madelena Mak 2022

title: Maintenance
path: maintenance
theme: "Fluent Red"

type: "custom:grid-layout"
layout: !include snippets/layout-page-margin.yaml

cards:
  - type: "custom:layout-card"
    layout_type: "custom:grid-layout"
    layout: !include snippets/layout-page-columns.yaml
    view_layout:
      grid-area: cc

    cards:
      # [Header] Summary
      - type: markdown
        style: !include snippets/style-markdown-page-title.yaml
        view_layout:
          grid-column: 1/-1
        content: >
          # Maintenance
          Peanut Hamper is {{ states('vacuum.peanut_hamper') }}{{ iif(
          is_state('binary_sensor.peanut_hamper_bin_full', 'on'), ' and
          needs to be emptied. ', '. ') }} {%- set chore_done =
          namespace(entities=[]) -%}
          {%- set chore_todo = namespace(entities=[]) -%}
          {%- set chore_overdue = namespace(entities=[]) -%}
          {%- for chore in expand('group.chores') -%}
            {%- if (chore.state != 'unknown') -%}
              {%- set input = chore.entity_id|regex_replace(find='input_button', replace='input_text') -%}
              {%- set diff = ( as_timestamp(now()) - as_timestamp(chore.state) ) / 60 / 60 / 24 %}
              {%- set due = states(input)|float(-1) -%}
              {%- if (diff < 1) and (as_datetime(chore.state).day == now().day) -%}{%- set chore_done.entities = chore_done.entities + [chore.entity_id] -%}{%- endif -%}
              {%- if due > 0 -%}
                {%- if (due < diff) -%}{%- set chore_overdue.entities = chore_overdue.entities + [chore.entity_id] -%}{%- else -%}
                  {%- if (due < diff + (due / 4)) -%}{%- set chore_todo.entities = chore_todo.entities + [chore.entity_id] -%}{%- endif -%}
                {%- endif -%}
              {%- endif -%}
            {%- endif %}
          {%- endfor -%}
          There are {{ chore_done.entities|length }} chores done, {{
          chore_todo.entities|length }} to do soon, and {{
          chore_overdue.entities|length }} overdue.
      # [Column] My Machines
      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card_no_link
            variables:
              name: MY MACHINES
            view_layout:
              grid-column: 1/-1

          - type: horizontal-stack
            cards:
              - type: "custom:vacuum-card"
                entity: vacuum.peanut_hamper
                image: default
                show_toolbar: true
                show_status: true
                compact_view: false
                card_mod:
                  style: >
                    .preview {font-size: var(--body-font-size); font-weight:
                    normal;} .metadata {position: absolute; top: 0;
                    text-align: left; padding: 0 16px;} .vacuum-name
                    {font-size: var(--card-title-font-size) !important;
                    font-weight: 500 !important;} .status {justify-content:
                    flex-start !important;} .status-text {margin-left: 0
                    !important;} ha-card .header {padding-top: 0 !important;
                    height: auto !important;} .battery {padding: 12px 16px
                    !important;} .stats-block {text-align: left !important;
                    padding: 8px 16px;} .vacuum {filter: invert(1);} ha-card
                    {--vc-background: none; --vc-spacing: 16px;} .tips
                    {flex-direction: row-reverse;} .toolbar {background:
                    none !important;}

          - type: entities
            entities:
              - entity: sensor.pure_hot_cool_link_filter_life
            title: Bedroom Dyson Pure

      # [Column] Watchman
      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card_no_link
            variables:
              name: WATCHMAN
            view_layout:
              grid-column: 1/-1

          - type: markdown
            content: >-
              <h2> <ha-icon icon='mdi:shield-half-full'></ha-icon> Watchman report<h2>
              <h3>Missing Entities: {{ states.sensor.watchman_missing_entities.state }} </h3>
              {%- for item in state_attr("sensor.watchman_missing_entities", "entities") %}
              <hr> <table><tr> <td>
              <ha-icon icon='mdi:
              {%- if item.state=="missing"-%}cloud-alert'
              {%- elif item.state=="unavail" -%}cloud-off-outline' {%- else-%}cloud-question'
              {%- endif -%} ></ha-icon>
              {{ item.id }} [{{item.state}}] <a title="{{item.occurrences}}">
              {{item.occurrences}}</a>
              </td></tr></table>
              {%- endfor %}
            card_mod:
              style:
                ha-markdown:
                  $: |
                    ha-markdown-element:first-of-type hr{
                      border-color: #303030;
                    }
          - type: markdown
            content: >-
              <h2 class="some"> <ha-icon icon='mdi:shield-half-full'></ha-icon> Watchman report<h2>
              <h3> Missing Services: {{ states.sensor.watchman_missing_services.state }} </h3>
              {%- for item in state_attr("sensor.watchman_missing_services", "services") %}
              <hr><table><tr> <td>  <ha-icon icon='mdi:cloud-alert'></ha-icon> {{ item.id }}
              <a title="{{item.occurrences}}">{{item.occurrences}}</a>
              </td></tr></table>
              {%- endfor %}
            card_mod:
              style:
                ha-markdown:
                  $: |
                    ha-markdown-element:first-of-type hr{
                      border-color: #303030;
                    }

      # [Column] Chores

      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card_no_link
            variables:
              name: CHORES
            view_layout:
              grid-column: 1/-1

          - type: "custom:auto-entities"
            filter:
              include:
                - group: group.chore_plants
                  options:
                    type: "custom:button-card"
                    template: chore_card
            card:
              type: entities
              title: Plants

          - type: "custom:auto-entities"
            filter:
              include:
                - group: group.chore_kitchen
                  options:
                    type: "custom:button-card"
                    template: chore_card
            card:
              type: entities
              title: Kitchen

          - type: "custom:auto-entities"
            filter:
              include:
                - group: group.chore_bathroom
                  options:
                    type: "custom:button-card"
                    template: chore_card
            card:
              type: entities
              title: Bathroom

          - type: "custom:auto-entities"
            filter:
              include:
                - group: group.chore_living_room
                  options:
                    type: "custom:button-card"
                    template: chore_card
            card:
              type: entities
              title: Living Room

          - type: "custom:auto-entities"
            filter:
              include:
                - group: group.chore_personal
                  options:
                    type: "custom:button-card"
                    template: chore_card
            card:
              type: entities
              title: Personal

      # [Column] Batteries

      - type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: header_card_no_link
            variables:
              name: BATTERIES
            view_layout:
              grid-column: 1/-1

          - card:
              style: |
                ha-card {
                  background-color: var(--dwains-theme-primary);
                  box-shadow: none;
                }
                .card-header {
                  padding: 5px 16px 10px;
                  font-size: 18px;
                  font-weight: 700 !important;
                }
              type: entities
            filter:
              include:
                - entity_id: sensor.*battery*
                  options:
                    entity_row: true
                    height: 4
                    max: 100
                    min: 0
                    positions:
                      icon: "off"
                      indicator: "off"
                      name: inside
                      value: inside
                    style: |-
                      bar-card-row {
                        height: 12px;
                        padding-top: 36px;
                      }
                      bar-card-background {
                        background: var(--primary-background-color);
                      }
                      bar-card-contentbar {
                        margin-top: -16px;
                      }
                      bar-card-name, bar-card-value {
                        margin: 0;
                      }
                    type: custom:bar-card
                  state: <=100
                  unit_of_measurement: "%"
                - attributes:
                    device_class: battery
                  domain: sensor
                  options:
                    entity_row: true
                    height: 4
                    max: 100
                    min: 0
                    positions:
                      icon: "off"
                      indicator: "off"
                      name: inside
                      value: inside
                    style: |-
                      bar-card-row {
                        height: 12px;
                        padding-top: 36px;
                      }
                      bar-card-background {
                        background: var(--primary-background-color);
                      }
                      bar-card-contentbar {
                        margin-top: -16px;
                      }
                      bar-card-name, bar-card-value {
                        margin: 0;
                      }
                    type: custom:bar-card
                  state: <=100
            sort:
              method: state
              numeric: true
              reverse: true
            type: custom:auto-entities
