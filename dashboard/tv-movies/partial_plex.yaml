---
type: vertical-stack
cards:
  - type: "custom:button-card"
    template: header_card
    variables:
      name: Plex
      label: Manage
      arrow: "mdi:arrow-top-right"
      action: url
      link: http://192.168.1.100:32400
    view_layout:
      grid-column: 1/-1
  - square: false
    columns: 1
    type: grid
    cards:
      - entity: sensor.plexstats_tvshowcount
        name: TV Shows
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plexstats_tvseasoncount
        name: TV Seasons
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plexstats_tvepisodecount
        name: TV Episodes
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plexstats_moviecount
        name: Movies
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none

  - square: false
    columns: 2
    type: grid
    cards:
      - entity: sensor.plex_thecube2
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plex_installed_version
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plex_latest_version
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.top_movie
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.top_tv_show
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.top_user
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.direct_plays
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.direct_streams
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.lan_bandwidth
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.total_bandwidth
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.transcodes
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.wan_bandwidth
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
  - type: markdown
    card_mod: !include ../snippets/style-markdown-table.yaml
    content: |-
      <details>
      <summary>Plex Top Users</summary>

      <table width="100%">
      <tr>
      <th>User</th>
      <th>Total Plays</th>
      <th>Watch Length</th>
      <th>Last Play</th>
      <th>
      </tr>
      {%- for item in state_attr('sensor.plex_tautulli_topusers', 'rows') %}
      {%- set uptime = item.total_duration | int -%}
      {%- set minutes = ((uptime % 3600) / 60) | int -%}
      {%- set hours = ((uptime) / 3600) | int -%}
      {%- set days = (uptime / 86400) | int -%}
      <tr>
      <td>{{ item.friendly_name }}</td>
      <td>{{ item.total_plays }}</td>
      <td>{{'%02d' % hours}}:{{'%02d' % minutes}}</td>
      <td>{{ item.last_play|timestamp_custom ('%d/%m/%Y') }}</td>
      </tr>
      {% endfor %}
      </table>
      </details>

      <details>
      <summary>Plex - Popular TV</summary>

      <table width="100%">
      <tr>
      <th>What?</th>
      <th>Who?</th>
      </tr>
      {% for row in state_attr("sensor.plex_tautulli_populartv", "rows") -%}
      <tr>
      <td>{{row.title}}</td>
      <td>{{row.users_watched}}</td>
      </tr>
      {% endfor -%}
      </table>
      </details>
  - type: vertical-stack
    view_layout:
      grid-column-start: 2/2
    cards:
      - type: custom:stack-in-card
        mode: vertical
        cards:
          - type: markdown
            card_mod: !include ../snippets/style-markdown-table.yaml
            content: |-
              <br>
              <details>
              <summary>Plex Watch History</summary>

              <table width="100%">
              <tr>
              <th>What?</th>
              <th>Who?</th>
              <th>When?</th>
              </tr>
              {% for row in state_attr("sensor.plex_tautulli_history", "data") -%}
              <tr>
              <td>{{row.full_title}}</td>
              <td>{{row.user}}</td>
              <td>{{ row.date|timestamp_custom ('%d/%m/%Y %H:%M') }}</td>
              </tr>
              {% endfor -%}
              </table>
              </details>

              <details>
              <summary>Plex Watch Stats - TV Shows</summary>
              <table width="100%">
              <tr>
              <th>#</th>
              <th>Plays</th>
              <th>Duration</th>
              <th>Average</th>
              <th>
              </tr>
              {% for row in state_attr("sensor.plex_tautulli_watch_stats_tv", "data") -%}
              {% set uptime = row.total_time | int -%}{% set minutes = ((uptime % 3600) / 60) | int -%}
              {% set hours = ((uptime) / 3600) | int -%}
              {% if 0 not in [ row.total_time, row.total_plays ] -%}
                {% set avetime = row.total_time / row.total_plays -%} {% set avemin = ((avetime % 3600) / 60) | int -%}
                {% set avehrs = ((avetime) / 3600) | int -%}
              {% else -%}
                {% set avetime = 0 -%}{% set avemin = 0 -%}{% set avehrs = 0 -%}
              {% endif -%}
              <tr>
              <td>{{ row.query_days }}D</td>
              <td>{{ row.total_plays }}</td>
              <td>{{'%02d' % hours}}:{{'%02d' % minutes}}</td>
              <td>{{'%02d' % avehrs}}:{{'%02d' % avemin}}</td>
              </tr>
              {% endfor %}
              </table>
              </details>

              <details>
              <summary>Plex Watch Stats - Movies</summary>
              <table width="100%">
              <tr>
              <th>#</th>
              <th>Plays</th>
              <th>Duration</th>
              <th>Average</th>
              <th>
              </tr>
              {% for row in state_attr("sensor.plex_tautulli_watch_stats_movies", "data") -%}
              {% set uptime = row.total_time | int -%}{% set minutes = ((uptime % 3600) / 60) | int -%}
              {% set hours = ((uptime) / 3600) | int -%}
              {% if 0 not in [ row.total_time, row.total_plays ] -%}
                {% set avetime = row.total_time / row.total_plays -%} {% set avemin = ((avetime % 3600) / 60) | int -%}
                {% set avehrs = ((avetime) / 3600) | int -%}
              {% else -%}
                {% set avetime = 0 -%}{% set avemin = 0 -%}{% set avehrs = 0 -%}
              {% endif -%}
              <tr>
              <td>{{ row.query_days }}D</td>
              <td>{{ row.total_plays }}</td>
              <td>{{'%02d' % hours}}:{{'%02d' % minutes}}</td>
              <td>{{'%02d' % avehrs}}:{{'%02d' % avemin}}</td>
              </tr>
              {% endfor %}
              </table>
              </details>

              <details>
              <summary>Plex Recently Added - TV Shows</summary>

              <table width="100%">
              <tr>
              <th>Date</th>
              <th>Detail</th>
              </tr>
              {%- for item in state_attr('sensor.plex_recently_added', 'data') %}
              {%- if item.flag | default('', true) %}
              {%- if item.airdate | default('', true) %}
              {%- set airdate = as_timestamp(item.airdate) | timestamp_custom('%a %b %d') %}
              <tr>
              <td>{{ airdate }}</td>
              <td>{{item.title}}<br/>
                <span>{{item.number}}, {{item.episode}}</span></td>
              </tr>
              {%- endif %}{%endif%}{% endfor %}
              </table>
              </details>

              <details>
              <summary>Plex Recently Added - Movies</summary>
              <table width="100%">
              <tr>
              <th>Date</th>
              <th>Detail</th>
              </tr>
              {%- for item in state_attr('sensor.plex_recently_added_movies', 'data') %}
              {%- if item.flag | default('', true) %}
              {%- if item.airdate | default('', true) %}
              {%- set airdate = as_timestamp(item.airdate) | timestamp_custom('%a %b %d') %}
              <tr>
              <td>{{ airdate }}</td>
              <td>{{item.title}}<br/></td>
              </tr>
              {%- endif %}{%endif%}{% endfor %}
              </table>
              </details>

              <details>
              <summary>Plex Top TV - Last 30 Days</summary>
              <table width="100%">
              <tr>
              <th>Show</th>
              <th>Total Plays</th>
              <th>Watch Length</th>
              <th>Last Play</th>
              <th>
              </tr>
              {%- for item in state_attr('sensor.plex_tautulli_toptv_30days', 'rows') %}
              {%- set uptime = item.total_duration | int -%}
              {%- set minutes = ((uptime % 3600) / 60) | int -%}
              {%- set hours = ((uptime) / 3600) | int -%}
              {%- set days = (uptime / 86400) | int -%}
              <tr>
              <td>{{ item.title }}</td>
              <td>{{ item.total_plays }}</td>
              <td>{{'%02d' % hours}}:{{'%02d' % minutes}}</td>
              <td>{{ item.last_play|timestamp_custom ('%d/%m/%Y') }}</td>
              </tr>
              {% endfor %}
              </table>
              </details>

              <details>
              <summary>Plex Top TV - By Duration</summary>
              <table width="100%">
              <tr>
              <th>Show</th>
              <th>Total Plays</th>
              <th>Watch Length</th>
              <th>Last Play</th>
              <th>
              </tr>
              {%- for item in state_attr('sensor.plex_tautulli_toptv', 'rows') %}
              {%- set uptime = item.total_duration | int -%}
              {%- set minutes = ((uptime % 3600) / 60) | int -%}
              {%- set hours = ((uptime) / 3600) | int -%}
              {%- set days = (uptime / 86400) | int -%}
              <tr>
              <td>{{ item.title }}</td>
              <td>{{ item.total_plays }}</td>
              <td>{{'%02d' % hours}}:{{'%02d' % minutes}}</td>
              <td>{{ item.last_play|timestamp_custom ('%d/%m/%Y') }}</td>
              </tr>
              {% endfor %}
              </table>
              </details>

              <details>
              <summary>Plex Top TV - By Eps Watched</summary>
              <table width="100%">
              <tr>
              <th>Show</th>
              <th>Total Plays</th>
              <th>Watch Length</th>
              <th>Last Play</th>
              <th>
              </tr>
              {%- for item in state_attr('sensor.plex_tautulli_toptv_plays', 'rows') %}
              {%- set uptime = item.total_duration | int -%}
              {%- set minutes = ((uptime % 3600) / 60) | int -%}
              {%- set hours = ((uptime) / 3600) | int -%}
              {%- set days = (uptime / 86400) | int -%}
              <tr>
              <td>{{ item.title }}</td>
              <td>{{ item.total_plays }}</td>
              <td>{{'%02d' % hours}}:{{'%02d' % minutes}}</td>
              <td>{{ item.last_play|timestamp_custom ('%d/%m/%Y') }}</td>
              </tr>
              {% endfor %}
              </table>
              </details>

              <details>
              <summary>Plex Top Movies</summary>
              <table width="100%">
              <tr>
              <th>Movie</th>
              <th>Total Plays</th>
              <th>Watch Length</th>
              <th>Last Play</th>
              <th>
              </tr>
              {%- for item in state_attr('sensor.plex_tautulli_topmovies', 'rows') %}
              {%- set uptime = item.total_duration | int -%}
              {%- set minutes = ((uptime % 3600) / 60) | int -%}
              {%- set hours = ((uptime) / 3600) | int -%}
              {%- set days = (uptime / 86400) | int -%}
              <tr>
              <td>{{ item.title }}</td>
              <td>{{ item.total_plays }}</td>
              <td>{{'%02d' % hours}}:{{'%02d' % minutes}}</td>
              <td>{{ item.last_play|timestamp_custom ('%d/%m/%Y') }}</td>
              </tr>
              {% endfor %}
              </table>
              </details>
