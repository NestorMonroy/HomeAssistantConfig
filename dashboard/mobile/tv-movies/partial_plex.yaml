---
type: vertical-stack
cards:
  - type: "custom:button-card"
    template: header_card
    variables:
      name: Plex
      label: Manage
      arrow: "mdi:arrow-top-right"
      action: url
      link: http://192.168.1.100:32400
    view_layout:
      grid-column: 1/-1
  - square: false
    columns: 1
    type: grid
    cards:
      - entity: sensor.plexstats_tvshowcount
        name: TV Shows
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plexstats_tvseasoncount
        name: TV Seasons
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plexstats_tvepisodecount
        name: TV Episodes
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plexstats_moviecount
        name: Movies
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none

  - square: false
    columns: 2
    type: grid
    cards:
      - entity: sensor.plex_thecube2
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plex_installed_version
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.plex_latest_version
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.top_movie
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.top_tv_show
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.top_user
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.direct_plays
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.direct_streams
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.lan_bandwidth
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.total_bandwidth
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.transcodes
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
      - entity: sensor.wan_bandwidth
        type: custom:mushroom-entity-card
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none

  - type: vertical-stack
    cards:
      - type: entities
        card_mod: null
        style:
          fold-entity-row$: |
            ha-icon {
              color: rgb(var(--rgb-disabled-color));
              margin-right: 24px;
            }
          hui-section-row $: |
            .divider { display: none; }
          .: |
            .card-content {
              padding: 0;
            }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Top Users
              secondary: >
                {{state_attr('sensor.plex_tautulli_topusers', 'rows')[0].friendly_name }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_topusers
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: User
                    data: rows
                    modify: x.friendly_name
                  - name: Total Plays
                    data: rows
                    modify: x.total_plays
                    align: center
                  - name: Watch Length
                    data: rows
                    align: center
                    modify: |-
                      {
                        var uptime = Number(x.total_duration);
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                      }
                  - name: Last Play
                    data: rows
                    modify: |-
                      {
                        var date = new Date(x.last_play*1000);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0')) + "/" + date.getFullYear()
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod: null
        style:
          fold-entity-row$: |
            ha-icon {
              color: rgb(var(--rgb-disabled-color));
              margin-right: 24px;
            }
          hui-section-row $: |
            .divider { display: none; }
          .: |
            .card-content {
              padding: 0;
            }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Watch Summary
              secondary: >
                {{state_attr('sensor.plex_tautulli_history', 'data')[0].full_title }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_history
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: "What?"
                    data: data
                    modify: x.full_title
                  - name: "Who?"
                    data: data
                    modify: x.user
                  - name: "When?"
                    data: data
                    modify: |-
                      {
                        var date = new Date(x.date*1000);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0')) + "/" + date.getFullYear()
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod: null
        style:
          fold-entity-row$: |
            ha-icon {
              color: rgb(var(--rgb-disabled-color));
              margin-right: 24px;
            }
          hui-section-row $: |
            .divider { display: none; }
          .: |
            .card-content {
              padding: 0;
            }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Watch Stats - TV
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_watch_stats_tv
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: "#"
                    data: data
                    modify: x.query_days + "D"
                    align: center
                  - name: Plays
                    data: data
                    modify: x.total_plays
                    align: center
                  - name: Duration
                    data: data
                    align: center
                    modify: |-
                      {
                        var uptime = Number(x.total_time);
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                      }
                  - name: Average
                    data: data
                    align: center
                    modify: |-
                      {
                        var time = Number(x.total_time);
                        var playcnt = Number(x.total_plays);
                        var uptime = time / playcnt;
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        if (playcnt == 0) {
                          "00:00"
                        } else {
                          hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                        }
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod: null
        style:
          fold-entity-row$: |
            ha-icon {
              color: rgb(var(--rgb-disabled-color));
              margin-right: 24px;
            }
          hui-section-row $: |
            .divider { display: none; }
          .: |
            .card-content {
              padding: 0;
            }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Watch Stats - Movies
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_watch_stats_movies
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: "#"
                    data: data
                    modify: x.query_days + "D"
                    align: center
                  - name: Plays
                    data: data
                    modify: x.total_plays
                    align: center
                  - name: Duration
                    data: data
                    align: center
                    modify: |-
                      {
                        var uptime = Number(x.total_time);
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                      }
                  - name: Average
                    data: data
                    align: center
                    modify: |-
                      {
                        var time = Number(x.total_time);
                        var playcnt = Number(x.total_plays);
                        var uptime = time / playcnt;
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        if (playcnt == 0) {
                          "00:00"
                        } else {
                          hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                        }
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod:
          style:
            fold-entity-row$: |
              ha-icon {
                color: rgb(var(--rgb-disabled-color));
                margin-right: 24px;
              }
            hui-section-row $: |
              .divider { display: none; }
            .: |
              .card-content {
                padding: 0;
              }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Recently Added - TV Shows
              secondary: >
                {{state_attr('sensor.plex_recently_added', 'data')[1].title }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_recently_added
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  tbody tr td:nth-child(1): "width: 20%;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: test
                    data: data
                    modify: x.title
                    hidden: true
                  - name: Date
                    data: data
                    modify: |-
                      {
                        var date = new Date(x.airdate);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0')) + "/" + date.getFullYear()
                      }
                  - name: Detail
                    data: data
                    modify: '{ x.title + "<br/><span>" + x.number + ", " + x.episode + "</span>" }'
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod:
          style:
            fold-entity-row$: |
              ha-icon {
                color: rgb(var(--rgb-disabled-color));
                margin-right: 24px;
              }
            hui-section-row $: |
              .divider { display: none; }
            .: |
              .card-content {
                padding: 0;
              }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Recently Added - Movies
              secondary: >
                {{state_attr('sensor.plex_recently_added_movies', 'data')[1].title }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_recently_added_movies
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  tbody tr td:nth-child(1): "width: 25%;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: test
                    data: data
                    modify: x.title
                    hidden: true
                  - name: Date
                    data: data
                    modify: |-
                      {
                        var date = new Date(x.airdate);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0')) + "/" + date.getFullYear()
                      }
                  - name: Detail
                    data: data
                    modify: x.title
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod:
          style:
            fold-entity-row$: |
              ha-icon {
                color: rgb(var(--rgb-disabled-color));
                margin-right: 24px;
              }
            hui-section-row $: |
              .divider { display: none; }
            .: |
              .card-content {
                padding: 0;
              }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Top TV - Last 30 Days
              secondary: >
                {{state_attr('sensor.plex_tautulli_toptv_30days', 'rows')[0].title }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_toptv_30days
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: Detail
                    data: rows
                    modify: x.title
                  - name: Plays
                    data: rows
                    align: center
                    modify: x.total_plays
                  - name: Length
                    data: rows
                    align: center
                    modify: |-
                      {
                        var uptime = Number(x.total_duration);
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                      }
                  - name: Date
                    data: rows
                    modify: |-
                      {
                        var date = new Date(x.last_play*1000);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0'))+"/"+date.getFullYear()
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod:
          style:
            fold-entity-row$: |
              ha-icon {
                color: rgb(var(--rgb-disabled-color));
                margin-right: 24px;
              }
            hui-section-row $: |
              .divider { display: none; }
            .: |
              .card-content {
                padding: 0;
              }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Top TV - By Duration
              secondary: >
                {{state_attr('sensor.plex_tautulli_toptv', 'rows')[0].title }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_toptv
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: Detail
                    data: rows
                    modify: x.title
                  - name: Plays
                    data: rows
                    align: center
                    modify: x.total_plays
                  - name: Length
                    data: rows
                    align: center
                    modify: |-
                      {
                        var uptime = Number(x.total_duration);
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                      }
                  - name: Date
                    data: rows
                    modify: |-
                      {
                        var date = new Date(x.last_play*1000);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0'))+"/"+date.getFullYear()
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod:
          style:
            fold-entity-row$: |
              ha-icon {
                color: rgb(var(--rgb-disabled-color));
                margin-right: 24px;
              }
            hui-section-row $: |
              .divider { display: none; }
            .: |
              .card-content {
                padding: 0;
              }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Top TV - By Eps Watched
              secondary: >
                {{state_attr('sensor.plex_tautulli_toptv_plays', 'rows')[0].title }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_toptv_plays
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: Detail
                    data: rows
                    modify: x.title
                  - name: Plays
                    data: rows
                    align: center
                    modify: x.total_plays
                  - name: Length
                    data: rows
                    align: center
                    modify: |-
                      {
                        var uptime = Number(x.total_duration);
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                      }
                  - name: Date
                    data: rows
                    modify: |-
                      {
                        var date = new Date(x.last_play*1000);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0'))+"/"+date.getFullYear()
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }

      - type: entities
        card_mod:
          style:
            fold-entity-row$: |
              ha-icon {
                color: rgb(var(--rgb-disabled-color));
                margin-right: 24px;
              }
            hui-section-row $: |
              .divider { display: none; }
            .: |
              .card-content {
                padding: 0;
              }
        entities:
          - type: custom:fold-entity-row
            head:
              type: custom:mushroom-template-card
              primary: Plex Top Movies
              secondary: >
                {{state_attr('sensor.plex_tautulli_topmovies', 'rows')[0].title }}
              icon: mdi:plex
              icon_color: orange
              card_mod:
                style: |
                  ha-card {
                    background: none;
                    border: 0;
                    box-shadow: none;
                  }
            padding: 0
            entities:
              - type: custom:hui-element
                card_type: custom:flex-table-card
                entities:
                  include: sensor.plex_tautulli_topmovies
                css:
                  table+: "border-collapse: collapse; padding: 0px;"
                  span: "font-size: smaller"
                strict: true
                columns:
                  - name: Detail
                    data: rows
                    modify: x.title
                  - name: Plays
                    data: rows
                    align: center
                    modify: x.total_plays
                  - name: Length
                    data: rows
                    align: center
                    modify: |-
                      {
                        var uptime = Number(x.total_duration);
                        var minutes = Math.floor((uptime % 3600) / 60);
                        var hours = Math.floor(((uptime) / 3600));
                        hours.toString().padStart(2, '0') + ":" + minutes.toString().padStart(2, '0')
                      }
                  - name: Date
                    data: rows
                    modify: |-
                      {
                        var date = new Date(x.last_play*1000);
                        String(date.getDate()).padStart(2,'0')+"/"+
                        (String(date.getMonth()+ 1).padStart(2,'0'))+"/"+date.getFullYear()
                      }
                card_mod:
                  style: |
                    ha-card {
                      overflow: auto;
                      padding-left: 20px;
                      padding-right: 20px;
                      padding-bottom: 20px
                    }
                    tbody tr:hover {
                      background-color: coral !important
                    }
