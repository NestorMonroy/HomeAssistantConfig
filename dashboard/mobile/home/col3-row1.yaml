---
type: grid
columns: 1
square: false
cards:
  - type: custom:auto-entities
    sort:
      method: attribute
      attribute: sortorder
    card_param: cards
    filter:
      template: >-
        {%- for s in states|selectattr('entity_id','search','sensor.rssfeed_*') -%}
        {%- for e in state_attr(s.entity_id, 'entries')[0:2] -%}
          {{
          {
            "type": "custom:mushroom-template-card",
            "entity": s.entity_id,
            "secondary": "Latest News from {{state_attr(entity , 'friendly_name')}}",
            "primary": e.title,
            "icon": "{{state_attr(entity , 'icon')}}",
            "tap_action": {
                "action": "url",
                "url_path": e.link
            },
            "fill_container": true,
            "multiline_secondary": true,
            "prmary": "",
            "icon_color": "",
            "card_mod": {
                "style": "ha-card { background: none; box-shadow: none;}"
            }
          }
          }},
        {%- endfor %} {%- endfor %}
    show_empty: false
    card:
      type: custom:swipe-card
      parameters:
        direction: vertical
        autoHeight: true
        height: 50
        effect: cube
        autoplay:
          delay: 2000
        cubeEffect:
          - slideShadows: false
  - type: horizontal-stack
    cards:
      - type: custom:mushroom-light-card
        entity: light.office_lamp
        show_brightness_control: true
        tap_action:
          action: toggle
        use_light_color: true
        fill_container: true
        show_color_temp_control: false
        show_color_control: false
        collapsible_controls: false
        hold_action:
          action: more-info
        card_mod:
          style:
            mushroom-shape-icon$: |
              .shape:active {
                transform: scale(1.2);
              }
            .: |
              mushroom-light-brightness-control {
                position: absolute;
                top: 0px;
                left: 0px;
                width: 100%;
                opacity: 0.3;
                --control-height: 66px;
                --control-border-radius: var(--ha-card-border-radius, 12px);
                --rgb-disabled: var(--rgb-card-background-color);
              }
              mushroom-state-item {
                z-index: 1;
                max-width: fit-content;
                margin-bottom: 0px;
                pointer-events: none;
              }
              mushroom-shape-icon {
                pointer-events: auto;
              }
      - type: custom:mushroom-light-card
        entity: light.bedroom_lamp
        show_brightness_control: true
        tap_action:
          action: toggle
        use_light_color: true
        card_mod:
          style:
            mushroom-shape-icon$: |
              .shape:active {
                transform: scale(1.2);
              }
            .: |
              mushroom-light-brightness-control {
                position: absolute;
                top: 0px;
                left: 0px;
                width: 100%;
                opacity: 0.3;
                --control-height: 66px;
                --control-border-radius: var(--ha-card-border-radius, 12px);
                --rgb-disabled: var(--rgb-card-background-color);
              }
              mushroom-state-item {
                z-index: 1;
                max-width: fit-content;
                margin-bottom: 0px;
                pointer-events: none;
              }
              mushroom-shape-icon {
                pointer-events: auto;
              }

  - type: custom:decluttering-card
    template: mushroom_entity_graph
    variables:
      - entity: sensor.lastfm_user_playcount
      - colour: lime
      - title: Last.FM Listen Count
      - line_width: 3
      - hours_to_show: 168
      - points_per_hour: 4
      - icon: fab:lastfm

  - type: vertical-stack
    cards:
      - !include ../tamworth/nbn_fttnupgrade.yaml

  # - !include ../../snippets/media_currently_playing_details.yaml

  - type: vertical-stack
    cards:
      - type: custom:auto-entities
        card_param: cards
        filter:
          template: >-
            {% from 'easy_time.jinja' import custom_relative_time -%} {% for s
            in state_attr('sensor.frontpage_plex_unwatched_tv','data') -%}
              {{
                {
                 "type": "custom:mushroom-template-card",
                 "entity": "sensor.frontpage_plex_unwatched_tv",
                 "primary": "Plex (New, Unwatched TV)",
                 "secondary": s.title + " - " + s.episode + " (" + s.number + ")\nAdded " + custom_relative_time(s.airdate, values='day'),
                 "multiline_secondary": true,
                 "badge_icon": "none",
                 "badge_color": "none",
                 "icon": "mdi:plex",
                 "tap_action": "none",
                 "hold_action": "none",
                 "fill_container": true,
                 "layout": "horizontal",
                 "card_mod": {
                    "style": {
                       ".": "ha-card {\n  background: url( '" + s.poster + "' ), linear-gradient(to left, transparent, var(--background-color) 50%);\n    background-size: 50%, cover;\n    background-position: right;\n    background-repeat: no-repeat;\n    background-blend-mode: saturation;\n}\n"
                    }
                 }
                }
              }},
            {%- endfor %}
        show_empty: false
        card:
          type: custom:swipe-card
          parameters:
            direction: vertical
            autoHeight: true
            height: 80
            effect: cube
            autoplay:
              delay: 2000
            cubeEffect:
              - slideShadows: false
      - type: custom:auto-entities
        card_param: cards
        filter:
          template: >-
            {% from 'easy_time.jinja' import custom_relative_time -%} {% for s
            in state_attr('sensor.frontpage_plex_unwatched_movies','data') -%}
              {{
                {
                 "type": "custom:mushroom-template-card",
                 "entity": "sensor.frontpage_plex_unwatched_movies",
                 "primary": "Plex (New, Unwatched Movies)",
                 "secondary": s.title + "\nAdded " + custom_relative_time(s.airdate, values='day'),
                 "multiline_secondary": true,
                 "badge_icon": "none",
                 "badge_color": "none",
                 "icon": "mdi:plex",
                 "tap_action": "none",
                 "hold_action": "none",
                 "fill_container": true,
                 "layout": "horizontal",
                 "card_mod": {
                    "style": {
                       ".": "ha-card {\n  background: url( '" + s.poster + "' ), linear-gradient(to left, transparent, var(--background-color) 50%);\n    background-size: 50%, cover;\n    background-position: right;\n    background-repeat: no-repeat;\n    background-blend-mode: saturation;\n}\n"
                    }
                 }
                }
              }},
            {%- endfor %}
        show_empty: false
        card:
          type: custom:swipe-card
          parameters:
            direction: vertical
            autoHeight: true
            height: 80
            effect: cube
            autoplay:
              delay: 2000
            cubeEffect:
              - slideShadows: false
      - type: custom:auto-entities
        card_param: cards
        filter:
          template: >-
            {% from 'easy_time.jinja' import custom_relative_time -%} {% for s
            in state_attr('sensor.frontpage_sonarr_upcoming','data') -%}
              {{
                {
                 "type": "custom:mushroom-template-card",
                 "entity": "sensor.frontpage_sonarr_upcoming",
                 "primary": "Sonarr (Upcoming TV)",
                 "secondary": s.title + " - " + s.episode + " (" + s.number + ")\nAiring " + custom_relative_time(s.airdate, values='day, hour'),
                 "multiline_secondary": true,
                 "badge_icon": "none",
                 "badge_color": "none",
                 "icon": "mdi:television",
                 "tap_action": "none",
                 "hold_action": "none",
                 "fill_container": true,
                 "layout": "horizontal",
                 "card_mod": {
                    "style": {
                       ".": "ha-card {\n  background: url( '" + s.poster + "' ), linear-gradient(to left, transparent, var(--background-color) 50%);\n    background-size: 50%, cover;\n    background-position: right;\n    background-repeat: no-repeat;\n    background-blend-mode: saturation;\n}\n"
                    }
                 }
                }
              }},
            {%- endfor %}
        show_empty: false
        card:
          type: custom:swipe-card
          parameters:
            direction: vertical
            autoHeight: true
            height: 80
            effect: cube
            autoplay:
              delay: 2000
            cubeEffect:
              - slideShadows: false
      - type: custom:auto-entities
        card_param: cards
        filter:
          template: >-
            {% from 'easy_time.jinja' import custom_relative_time -%} {% for s
            in state_attr('sensor.frontpage_radarr_upcoming','data') -%}
              {{
                {
                 "type": "custom:mushroom-template-card",
                 "entity": "sensor.frontpage_radarr_upcoming",
                 "primary": "Radarr (Upcoming Movies)",
                 "secondary": s.title + "\nReleased " + custom_relative_time(s.airdate, values='day'),
                 "multiline_secondary": true,
                 "badge_icon": "none",
                 "badge_color": "none",
                 "icon": "mdi:filmstrip",
                 "tap_action": "none",
                 "hold_action": "none",
                 "fill_container": true,
                 "layout": "horizontal",
                 "card_mod": {
                    "style": {
                       ".": "ha-card {\n  background: url( '" + s.poster + "' ), linear-gradient(to left, transparent, var(--background-color) 50%);\n    background-size: 50%, cover;\n    background-position: right;\n    background-repeat: no-repeat;\n    background-blend-mode: saturation;\n}\n"
                    }
                 }
                }
              }},
            {%- endfor %}
        show_empty: false
        card:
          type: custom:swipe-card
          parameters:
            direction: vertical
            autoHeight: true
            height: 80
            effect: cube
            autoplay:
              delay: 2000
            cubeEffect:
              - slideShadows: false
      - type: "custom:swipe-card"
        parameters:
          direction: vertical
          autoHeight: true
          height: 80
          effect: cube
          autoplay:
            delay: 10000
          cubeEffect:
            - slideShadows: false
        # view_layout:
        #   grid-column: 1/3
        #   grid-row: 3/4
        cards:
          - type: custom:mushroom-template-card
            entity: media_player.office_sonos
            primary: Sonos (Office)
            secondary: >-
              {% if is_state(entity, ['playing']) %}
                {%- if state_attr(entity, "media_channel") != None -%}
                {{ state_attr(entity, "media_channel") }}
                {%- elif state_attr(entity, "media_playlist") != None -%}
                {{ state_attr(entity, "media_playlist") }}
              {%- endif %}

              {{ state_attr(entity, "media_artist") }} - {{ state_attr(entity,
              "media_title") }}

              {% else %}
                Not Playing
              {% endif %}
            multiline_secondary: true
            badge_icon: |
              {% if is_state(entity, ['playing']) %}
                mdi:play
              {% endif %}
            badge_color: red
            icon: '{{ state_attr(entity, "icon") }}'
            tap_action:
              action: more-info
            hold_action:
              action: none
            fill_container: true
            layout: horizontal
            card_mod:
              style:
                mushroom-shape-icon:
                  $: |
                    ha-icon {

                      /* Animate media player icon based on media type */
                      {% set media_type = state_attr(config.entity, 'media_content_type') %}
                      --icon-animation:
                      {% if media_type == 'tvshow' %}
                        flicker 1s linear infinite alternate
                      {% elif media_type == 'movie' %}
                        spin 2s linear infinite reverse
                      {% elif media_type == 'music' %}
                        beat 1.3s ease-out infinite both
                      {% elif media_type == 'playlist' %}
                        beat 1.3s ease-out infinite both
                      {% endif %};

                      /* Stop animation while paused */
                      {{ '--icon-animation: none;' if not is_state(config.entity, 'playing') }}
                    }
                    @keyframes flicker {
                      0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { opacity: 1; }
                      32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { opacity: 0.6; }
                    }
                    @keyframes beat {
                      0% { transform: scale(1); }
                      10% { transform: scale(1.1); }
                      17% { transform: scale(1.05); }
                      33% { transform: scale(1.25); }
                      60% { transform: scale(1); }
                    }
                .: |
                  mushroom-shape-icon {

                    /* Change media player icon based on media type */
                    {% set media_type = state_attr(config.entity, 'media_content_type') %}
                    --card-mod-icon:
                    {% if media_type == 'tvshow' %}
                      mdi:television-classic
                    {% elif media_type == 'movie' %}
                      mdi:movie-roll
                    {% elif media_type == 'music' %}
                      mdi:music
                    {% elif media_type == 'playlist' %}
                      mdi:music
                    {% else %}
                      {{ state_attr(config.entity, "icon") }}
                    {% endif %};
                      }
                  ha-card {
                    {% if not is_state(config.entity, 'off') and not is_state(config.entity, 'idle') %}
                      background: url( '{{ state_attr(config.entity, "entity_picture") }}' ), linear-gradient(to left, transparent, var(--background-color) 50%);
                      background-size: 50%, cover;
                      background-position: right;
                      background-repeat: no-repeat;
                      background-blend-mode: saturation;
                    {% endif %}
                  }

          - type: custom:mushroom-template-card
            entity: media_player.bedroom_symfonisk
            primary: Sonos (Bedroom)
            secondary: >-
              {% if is_state(entity, ['playing']) %}
                {%- if state_attr(entity, "media_channel") != None -%}
                {{ state_attr(entity, "media_channel") }}
                {%- elif state_attr(entity, "media_playlist") != None -%}
                {{ state_attr(entity, "media_playlist") }}
              {%- endif %}

              {{ state_attr(entity, "media_artist") }} - {{ state_attr(entity,
              "media_title") }}

              {% else %}
                Not Playing
              {% endif %}
            multiline_secondary: true
            badge_icon: |
              {% if is_state(entity, ['playing']) %}
                mdi:play
              {% endif %}
            badge_color: red
            icon: phu:symfonisk-lampe
            tap_action:
              action: more-info
            hold_action:
              action: none
            fill_container: true
            layout: horizontal
            card_mod:
              style:
                mushroom-shape-icon:
                  $: |
                    ha-icon {

                      /* Animate media player icon based on media type */
                      {% set media_type = state_attr(config.entity, 'media_content_type') %}
                      --icon-animation:
                      {% if media_type == 'tvshow' %}
                        flicker 1s linear infinite alternate
                      {% elif media_type == 'movie' %}
                        spin 2s linear infinite reverse
                      {% elif media_type == 'music' %}
                        beat 1.3s ease-out infinite both
                      {% elif media_type == 'playlist' %}
                        beat 1.3s ease-out infinite both
                      {% endif %};

                      /* Stop animation while paused */
                      {{ '--icon-animation: none;' if not is_state(config.entity, 'playing') }}
                    }
                    @keyframes flicker {
                      0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { opacity: 1; }
                      32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { opacity: 0.6; }
                    }
                    @keyframes beat {
                      0% { transform: scale(1); }
                      10% { transform: scale(1.1); }
                      17% { transform: scale(1.05); }
                      33% { transform: scale(1.25); }
                      60% { transform: scale(1); }
                    }
                .: |
                  mushroom-shape-icon {

                    /* Change media player icon based on media type */
                    {% set media_type = state_attr(config.entity, 'media_content_type') %}
                    --card-mod-icon:
                    {% if media_type == 'tvshow' %}
                      mdi:television-classic
                    {% elif media_type == 'movie' %}
                      mdi:movie-roll
                    {% elif media_type == 'music' %}
                      mdi:music
                    {% elif media_type == 'playlist' %}
                      mdi:music
                    {% else %}
                      {{ state_attr(config.entity, "icon") }}
                    {% endif %};
                      }
                  ha-card {
                    {% if not is_state(config.entity, 'off') and not is_state(config.entity, 'idle') %}
                      background: url( '{{ state_attr(config.entity, "entity_picture") }}' ), linear-gradient(to left, transparent, var(--background-color) 50%);
                      background-size: 50%, cover;
                      background-position: right;
                      background-repeat: no-repeat;
                      background-blend-mode: saturation;
                    {% endif %}
                  }

          - type: custom:mushroom-template-card
            entity: media_player.bedroom_apple_tv
            name: Apple TV
            primary: '{{ state_attr(entity, "friendly_name") }}'
            secondary: >-
              {% if is_state(entity, ['playing']) %}
                {%- if state_attr(entity, "media_channel") != None -%}
                {{ state_attr(entity, "media_channel") }}
                {%- elif state_attr(entity, "media_playlist") != None -%}
                {{ state_attr(entity, "media_playlist") }}
              {%- endif %}

              {{ state_attr(entity, "media_artist") }} - {{ state_attr(entity,
              "media_title") }}

              {% else %}
                Not Playing
              {% endif %}
            multiline_secondary: true
            badge_icon: |
              {% if is_state(entity, ['playing']) %}
                mdi:play
              {% endif %}
            badge_color: red
            icon: '{{ state_attr(entity, "icon") }}'
            tap_action:
              action: more-info
            hold_action:
              action: none
            fill_container: true
            layout: horizontal
            card_mod:
              style:
                mushroom-shape-icon:
                  $: |
                    ha-icon {

                      /* Animate media player icon based on media type */
                      {% set media_type = state_attr(config.entity, 'media_content_type') %}
                      --icon-animation:
                      {% if media_type == 'tvshow' %}
                        flicker 1s linear infinite alternate
                      {% elif media_type == 'movie' %}
                        spin 2s linear infinite reverse
                      {% elif media_type == 'music' %}
                        beat 1.3s ease-out infinite both
                      {% elif media_type == 'playlist' %}
                        beat 1.3s ease-out infinite both
                      {% endif %};

                      /* Stop animation while paused */
                      {{ '--icon-animation: none;' if not is_state(config.entity, 'playing') }}
                    }
                    @keyframes flicker {
                      0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { opacity: 1; }
                      32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { opacity: 0.6; }
                    }
                    @keyframes beat {
                      0% { transform: scale(1); }
                      10% { transform: scale(1.1); }
                      17% { transform: scale(1.05); }
                      33% { transform: scale(1.25); }
                      60% { transform: scale(1); }
                    }
                .: |
                  mushroom-shape-icon {

                    /* Change media player icon based on media type */
                    {% set media_type = state_attr(config.entity, 'media_content_type') %}
                    --card-mod-icon:
                    {% if media_type == 'tvshow' %}
                      mdi:television-classic
                    {% elif media_type == 'movie' %}
                      mdi:movie-roll
                    {% elif media_type == 'music' %}
                      mdi:music
                    {% elif media_type == 'playlist' %}
                      mdi:music
                    {% else %}
                      {{ state_attr(config.entity, "icon") }}
                    {% endif %};
                      }
                  ha-card {
                    {% if not is_state(config.entity, 'off') and not is_state(config.entity, 'idle') %}
                      background: url( '{{ state_attr(config.entity, "entity_picture") }}' ), linear-gradient(to left, transparent, var(--background-color) 50%);
                      background-size: 50%, cover;
                      background-position: right;
                      background-repeat: no-repeat;
                      background-blend-mode: saturation;
                    {% endif %}
                  }

          - type: custom:mushroom-template-card
            entity: media_player.spotify_thomas_baxter
            primary: Spotify
            secondary: >-
              {% if is_state(entity, ['playing']) %}
                {%- if state_attr(entity, "media_channel") != None -%}
                {{ state_attr(entity, "media_channel") }}
                {%- elif state_attr(entity, "media_playlist") != None -%}
                {{ state_attr(entity, "media_playlist") }}
              {%- endif %}

              {{ state_attr(entity, "media_artist") }} - {{ state_attr(entity,
              "media_title") }}

              {% else %}
                Not Playing
              {% endif %}
            multiline_secondary: true
            badge_icon: |
              {% if is_state(entity, ['playing']) %}
                mdi:play
              {% endif %}
            badge_color: red
            icon: '{{ state_attr(entity, "icon") }}'
            tap_action:
              action: more-info
            hold_action:
              action: none
            fill_container: true
            layout: horizontal
            card_mod:
              style:
                mushroom-shape-icon:
                  $: |
                    ha-icon {

                      /* Animate media player icon based on media type */
                      {% set media_type = state_attr(config.entity, 'media_content_type') %}
                      --icon-animation:
                      {% if media_type == 'tvshow' %}
                        flicker 1s linear infinite alternate
                      {% elif media_type == 'movie' %}
                        spin 2s linear infinite reverse
                      {% elif media_type == 'music' %}
                        beat 1.3s ease-out infinite both
                      {% elif media_type == 'playlist' %}
                        beat 1.3s ease-out infinite both
                      {% endif %};

                      /* Stop animation while paused */
                      {{ '--icon-animation: none;' if not is_state(config.entity, 'playing') }}
                    }
                    @keyframes flicker {
                      0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { opacity: 1; }
                      32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { opacity: 0.6; }
                    }
                    @keyframes beat {
                      0% { transform: scale(1); }
                      10% { transform: scale(1.1); }
                      17% { transform: scale(1.05); }
                      33% { transform: scale(1.25); }
                      60% { transform: scale(1); }
                    }
                .: |
                  mushroom-shape-icon {

                    /* Change media player icon based on media type */
                    {% set media_type = state_attr(config.entity, 'media_content_type') %}
                    --card-mod-icon:
                    {% if media_type == 'tvshow' %}
                      mdi:television-classic
                    {% elif media_type == 'movie' %}
                      mdi:movie-roll
                    {% elif media_type == 'music' %}
                      mdi:music
                    {% elif media_type == 'playlist' %}
                      mdi:music
                    {% else %}
                      {{ state_attr(config.entity, "icon") }}
                    {% endif %};
                      }
                  ha-card {
                    {% if not is_state(config.entity, 'off') and not is_state(config.entity, 'idle') %}
                      background: url( '{{ state_attr(config.entity, "entity_picture") }}' ), linear-gradient(to left, transparent, var(--background-color) 50%);
                      background-size: 50%, cover;
                      background-position: right;
                      background-repeat: no-repeat;
                      background-blend-mode: saturation;
                    {% endif %}
                  }

          # - type: custom:mushroom-template-card
          #   primary: last.fm Top Artists
          #   secondary: >
          #     {{ state_attr('sensor.last_fm_top_artists', 'artist_1') }} ({{ state_attr('sensor.last_fm_top_artists', 'artist_1_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_artists', 'artist_2') }} ({{ state_attr('sensor.last_fm_top_artists', 'artist_2_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_artists', 'artist_3') }} ({{ state_attr('sensor.last_fm_top_artists', 'artist_3_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_artists', 'artist_4') }} ({{ state_attr('sensor.last_fm_top_artists', 'artist_4_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_artists', 'artist_5') }} ({{ state_attr('sensor.last_fm_top_artists', 'artist_5_playcount') }} Plays)
          #   icon: fab:lastfm
          #   icon_color: "red"
          #   fill_container: true
          #   multiline_secondary: true
          #   tap_action:
          #     action: none
          #   hold_action:
          #     action: none
          #   double_tap_action:
          #     action: none
          # - type: custom:mushroom-template-card
          #   primary: last.fm Top Albums
          #   secondary: >
          #     {{ state_attr('sensor.last_fm_top_albums', 'album_1') }} ({{ state_attr('sensor.last_fm_top_albums', 'album_1_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_albums', 'album_2') }} ({{ state_attr('sensor.last_fm_top_albums', 'album_2_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_albums', 'album_3') }} ({{ state_attr('sensor.last_fm_top_albums', 'album_3_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_albums', 'album_4') }} ({{ state_attr('sensor.last_fm_top_albums', 'album_4_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_albums', 'album_5') }} ({{ state_attr('sensor.last_fm_top_albums', 'album_5_playcount') }} Plays)
          #   icon: fab:lastfm
          #   icon_color: "red"
          #   fill_container: true
          #   multiline_secondary: true
          #   tap_action:
          #     action: none
          #   hold_action:
          #     action: none
          #   double_tap_action:
          #     action: none
          # - type: custom:mushroom-template-card
          #   primary: last.fm Top Tracks
          #   secondary: >
          #     {{ state_attr('sensor.last_fm_top_tracks', 'track_1') }} ({{ state_attr('sensor.last_fm_top_tracks', 'track_1_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_tracks', 'track_2') }} ({{ state_attr('sensor.last_fm_top_tracks', 'track_2_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_tracks', 'track_3') }} ({{ state_attr('sensor.last_fm_top_tracks', 'track_3_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_tracks', 'track_4') }} ({{ state_attr('sensor.last_fm_top_tracks', 'track_4_playcount') }} Plays)

          #     {{ state_attr('sensor.last_fm_top_tracks', 'track_5') }} ({{ state_attr('sensor.last_fm_top_tracks', 'track_5_playcount') }} Plays)
          #   icon: fab:lastfm
          #   icon_color: "red"
          #   fill_container: true
          #   multiline_secondary: true
          #   tap_action:
          #     action: none
          #   hold_action:
          #     action: none
          #   double_tap_action:
          #     action: none
