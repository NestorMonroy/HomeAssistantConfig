---
alias: "[Light] Sunrise Simulator"
sequence:
  - parallel:
      - if:
          - condition: template
            value_template: "{{ temp | count > 0 }}"
        then:
          - repeat:
              while:
                - condition: template
                  value_template: >
                    {{ repeat.index <= maxbri
                          and not ( repeat.index > 1
                                             and states.light
                                                        | selectattr('entity_id', 'in', temp)
                                                        | selectattr('state', 'eq', 'on') | list | count
                                                      ==  0 ) }}
              sequence:
                - service: light.turn_on
                  data:
                    brightness_pct: |
                      {{ iif(repeat.index < 100, repeat.index, 100) }}
                    color_temp: >
                      {{ iif(repeat.index < maxbri, ( 500 - ( (repeat.index-1) *
                      2.5 * (100/maxbri) ) ) | int, 185 ) }}
                    transition: |
                      {{ ( ( dur * 60) / maxbri ) | int }}
                  target:
                    entity_id: |
                      {{ temp }}
                - delay:
                    milliseconds: >
                      {{ (  ( ( dur |
                      int(10) * 60) / maxbri ) * 1000
                       ) | int }}
      - if:
          - condition: template
            value_template: "{{ color | count > 0 }}"
        then:
          - repeat:
              while:
                - condition: template
                  value_template: >
                    {{ repeat.index <= maxbri
                          and not ( repeat.index > 1
                                             and states.light
                                                        | selectattr('entity_id', 'in', color)
                                                        | selectattr('state', 'eq', 'on') | list | count
                                                      == 0 ) }}
              sequence:
                - service: light.turn_on
                  data:
                    rgb_color: |
                      {% if repeat.index <= maxbri/6 %}
                        [255,0,0]
                      {% elif repeat.index <= (maxbri/6) * 2  %}
                        [255,77,0]
                      {% elif repeat.index <= (maxbri/6) * 3 %}
                        [255,103,0]
                      {% elif repeat.index <= (maxbri/6) * 4 %}
                        [255,129,0]
                      {% else %}
                        [255,167,0]
                      {% endif %}
                    brightness_pct: |
                      {{ iif(repeat.index < 100, repeat.index, 100) }}
                    transition: |
                      {{ (  ( dur * 60) / maxbri  ) | int }}
                  target:
                    entity_id: |
                      {{ color }}
                - delay:
                    milliseconds: |
                      {{ (  ( ( dur * 60) / maxbri ) * 1000 ) | int }}
variables:
  dur: |
    {{ duration | default('10', true) | int(10) }}
  entities: |
    {% set res = namespace(r=[]) %}  {% if target is defined %}
      {% set target = [target] if target is string else target %}
      {% for t in target %}
        {% if t[0:6] == 'light.' and t in expand(states.light) | map(attribute='entity_id') | list %}
          {% set res.r = res.r + [t] %}
        {% elif t[0:6] == 'group.' and t in states.group | map(attribute='entity_id') | list %}
          {% set res.r = res.r + states.group
                                  | selectattr('entity_id', 'eq', t)
                                  | map(attribute='attributes.entity_id')
                                  | list
                                  | default([''], true)
                                  | first
                                  | select('in', states.light
                                                  | rejectattr('state','in', ['unavailable', 'unknown', None])
                                                  | map(attribute='entity_id')
                                                  | list)
                                  | list %}
        {% else %}
          {% set res.r = res.r + states.light
                                   | rejectattr('state','in', ['unavailable', 'unknown', None])
                                   | selectattr('entity_id', 'in', area_entities(t))
                                   | map(attribute='entity_id')
                                   | list %}
        {% endif %}
      {% endfor %}
    {% else %}
      {% set res.r = states.light
                       | rejectattr('state','in', ['unavailable', 'unknown', None])
                       | map(attribute='entity_id')
                       | list %}
    {% endif %} {{ res.r }}
  color: |
    {% set res = namespace(r=[], l=[]) %}
    {% if entities | default([], true) | count > 0 %}
      {% for sun in entities %}
        {% if states(sun) not in ['unavailable','unknown']
            and ( 'hs' in states[sun].attributes.supported_color_modes
                      or 'rgbw' in states[sun].attributes.supported_color_modes
                      or 'xy' in states[sun].attributes.supported_color_modes ) %}
          {% set res.r = res.r + [sun] %}
        {% endif %}
      {% endfor %}
    {% endif %}
    {{ res.r }}
  temp: |
    {{ entities | reject('in', color) | list }}
  maxbri: |
    {% set bri = brightness | default('100', true) |int(100) %}
    {{ bri if bri <= 100 else 100 }}
mode: single
